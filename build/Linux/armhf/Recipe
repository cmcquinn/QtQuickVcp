#!/usr/bin/env bash

# NOTES:
#
# 1) IT IS NOT SAFE TO RUN THIS RECIPE ON A PERSISTENT FILESYSTEM! Use either:
#      * A chroot into a Live ISO, squashfs or Docker Image.
#      * Or, a virtual machine on a dedicated build server (e.g. Travis CI)
#    DO NOT RUN THE RECIPE ON A NORMAL COMPUTER OUTSIDE OF A TEMPORARY CHROOT!
#

set -e # Halt on errors
set -x # Be verbose

##########################################################################
# CHECK SYSTEM
##########################################################################

# This script should be run inside CentOS 6 if possible,
# or CentOS 7 if 6 is unavailable for your architecture.
if [ "$(grep "Debian GNU/Linux 9 (stretch)" /etc/*release*)" ]; then
  OS="Debian Stretch"
else
  echo "${0}: Warning: Not running on Debian Stretch!" >&2
fi

##########################################################################
# GET DEPENDENCIES
##########################################################################
# only prepare system if not already prepared (custom docker image)
if [ ! -f /etc/system-prepared ]; then
  ./init.sh
fi

##########################################################################
# BUILD QTQUICKVCP
##########################################################################

# armhf uses qt5 from the Debian repos
export QML_IMPORT_PATH="/usr/lib/arm-linux-gnueabihf/qt5/qml"
export QT_INSTALL_PREFIX="/usr/lib"

# FIXME: deployment.pri needs to be patched for armhf or make install fails
cd src
patch < deployment-armhf.patch
cd ..

mkdir -p build.release
cd build.release

qmake -r ..
make -j$((`nproc` + 1))
# make docs
sudo make install
# make install_docs

# compress QtQuick module
zipfile="QtQuickVcp.tar.gz"
mkdir qml
mkdir lib
cp -r ${QML_IMPORT_PATH}/Machinekit qml/Machinekit
cp ${QT_INSTALL_PREFIX}/arm-linux-gnueabihf/libmachinetalk* lib/
tar -zcf $zipfile qml lib

# allow access to archive from outside the chroot
chmod a+rwx $zipfile
chmod a+rwx .
ls -lh $zipfile
rm -r qml
rm -r lib